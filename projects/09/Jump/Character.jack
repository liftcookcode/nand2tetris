class Character {

    field int x, y;
    field int vx, vy;


    constructor Character new() {
        let x = 200;
        let y = 200;
        let vx = 0;
        let vy = 0;
        return this;
    }

    method void update() {
        do erase();
        let vy = vy - 1;
        let x = x + vx;
        let y = y + vy;
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }


    method void jump() {
        let vy = 10;
        return;
    }

    // Screen is 256 rows of 512 pixels each.
    // 512 pixels = 512/16 = 32 memory locations.

    method void draw() {
        var int location;
        let location = ((255 - y)*32) + (x/16);
        do drawRaw(location);
        return;
    }
    method void erase() {
        var int location;
        let location = ((255 - y)*32) + (x/16);
        do eraseRaw(location);
        return;
    }

    method void drawRaw(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 896);
        do Memory.poke(memAddress+64, 1088);
        do Memory.poke(memAddress+96, 1088);
        do Memory.poke(memAddress+128, 640);
        do Memory.poke(memAddress+160, 256);
        do Memory.poke(memAddress+192, 896);
        do Memory.poke(memAddress+224, 1344);
        do Memory.poke(memAddress+256, 2336);
        do Memory.poke(memAddress+288, 256);
        do Memory.poke(memAddress+320, 640);
        do Memory.poke(memAddress+352, 1088);
        do Memory.poke(memAddress+384, 2080);
        do Memory.poke(memAddress+416, 4112);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
    }

    method void eraseRaw(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, 0);
        do Memory.poke(memAddress+96, 0);
        do Memory.poke(memAddress+128, 0);
        do Memory.poke(memAddress+160, 0);
        do Memory.poke(memAddress+192, 0);
        do Memory.poke(memAddress+224, 0);
        do Memory.poke(memAddress+256, 0);
        do Memory.poke(memAddress+288, 0);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
    }
}